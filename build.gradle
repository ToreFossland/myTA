/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.8.1/userguide/java_library_plugin.html
 */
 
plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'application'
    id 'java'
    id 'org.openjfx.javafxplugin' version '0.0.7'
    id 'eclipse'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework  
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    
    //MySQL connector
    compile 'mysql:mysql-connector-java:8.0.15'
    
    //Mockito, for mock objects
    testCompile 'org.mockito:mockito-core:2.24.0'
    
    compile group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.6.0'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

test {
    // Enable JUnit 5 (Gradle 4.6+).
    useJUnitPlatform()
    testLogging.showStandardStreams = true
	//finalizedBy jacocoTestReport
}

javafx {
    modules = [ 'javafx.controls','javafx.fxml']
}

mainClassName = 'gui.Main'

/*jacoco {
    toolVersion = "0.8.2"
    reportsDir = file("$buildDir/jacocoHtml")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.7
            }
        }
    }
}*/